version: 2

machine-config: &machine-config
  machine: true
  working_directory: ~/repo
  environment:
    TERM: dumb
    GRADLE_OPTS: -Xmx256m

shared-steps:
  open-jdk: &open-jdk
    run:
      name: Update Java to OpenJDK
      command: |
        sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
        sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        java -version
  save-gradle-cache: &save-gradle-cache
    save_cache:
      key: gcache-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      paths:
        - ~/.gradle
        - ~/.m2
  restore-gradle-cache: &restore-gradle-cache
    restore_cache:
      keys:
        - gcache-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

jobs:
  scala-style:
    <<: *machine-config
    steps:
      - checkout
      - *open-jdk
      - run:
          name: Scala style check
          command: java -version && ./gradlew -v && ./gradlew --parallel scalaStyle
  compile:
    <<: *machine-config
    steps:
      - checkout
      - *open-jdk
      - *restore-gradle-cache
      - run:
          name: Clone repo & compile project
          command: java -version && ./gradlew -v && ./gradlew --parallel testScoverageClasses
      - *save-gradle-cache
  test:
    <<: *machine-config
    parallelism: 4
    steps:
      - checkout
      - *open-jdk
      - *restore-gradle-cache
      - run:
          name: Build project
          command: |
            TEST_FILES=$(circleci tests glob '**/src/test/scala/**/*.scala')
            COUNT_TEST_FILE_CMD='echo $TEST_FILES | sort |tr " " "\n" | wc -l'
            echo "Total test files : `eval $COUNT_TEST_FILE_CMD`"
            TEST_FILES=$(echo "$TEST_FILES" | circleci tests split --split-by=timings --timings-type=classname --index=$CIRCLE_NODE_INDEX | tr ' ' '\n' | cut -d "/" -f5-$2 | sed 's/.\{6\}$/\*/g')
            echo -e "Test files running on this container : `eval $COUNT_TEST_FILE_CMD`\n$TEST_FILES\n"
            export TEST_FILES=$(echo "$TEST_FILES" | sed 's/\\n$//' )
            java -version && ./gradlew -v && ./gradlew reportScoverage
      - run:
          name: Collect test results
          command: |
            mkdir -p ~/junit/
            mkdir -p ~/junit.xml/
            find . -type d -regex ".*/build/test-results/testScoverage" -exec bash -c 'f=$(echo {} | cut -d/ -f2); cp -r {} ~/junit.xml/$f' \;
            find . -type d -regex ".*/build/reports/tests/testScoverage" -exec bash -c 'f=$(echo {} | cut -d/ -f2); cp -r {} ~/junit/$f' \;
          when: always
      - store_test_results:
          path: ~/junit.xml/
      - store_artifacts:
          path: ~/junit/
      - run:
          name: Report scoverage resuts to Codecov
          command: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  build:
    jobs:
      - scala-style
      - compile
      - test:
          requires:
            - scala-style
            - compile
